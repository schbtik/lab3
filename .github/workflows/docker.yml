name: Build and Test Docker Container  # Назва для цього процесу (workflows)

on:
  push:
    branches:
      - main  # або інша гілка, за якою ви хочете запускати workflow
  pull_request:
    branches:
      - main  # Запуск workflow при створенні pull request на гілку main

jobs:
  build:
    runs-on: ubuntu-latest  # Виконання на останньому образі Ubuntu в GitHub Actions

    steps:
      # Крок для отримання коду з репозиторію
      - name: Checkout code
        uses: actions/checkout@v2  # Використовуємо стандартну дію для отримання коду з репозиторію

      # Крок для налаштування Docker Buildx (рекомендується для багатоплатформових збірок)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # Налаштування Docker Buildx для збірки

      # Крок для логіну в Docker Hub (якщо ви використовуєте Docker Hub)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2  # Стандартна дія для входу в Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Логін для Docker Hub, зберігається в GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Пароль для Docker Hub, зберігається в GitHub Secrets

      # Крок для установки Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Крок для збірки Docker образу за допомогою docker-compose
      - name: Build Docker image
        run: docker-compose -f docker-compose.yml build  # Використовуємо docker-compose для зборки образу

      # Крок для запуску контейнерів за допомогою docker-compose
      - name: Run Docker container
        run: docker-compose -f docker-compose.yml up -d  # Запускаємо контейнери в фоновому режимі

      # Крок для виконання тестів всередині контейнера
      - name: Run tests
        run: |
          docker-compose exec web python manage.py test  # Виконуємо тести Django в контейнері web

      # Крок для зупинки контейнерів після виконання тестів
      - name: Stop containers
        run: docker-compose down  # Зупиняємо та видаляємо контейнери після завершення тестів
